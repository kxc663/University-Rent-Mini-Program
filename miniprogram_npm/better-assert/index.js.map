{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar AssertionError = require('assert').AssertionError\n  , callsite = require('callsite')\n  , fs = require('fs')\n\n/**\n * Expose `assert`.\n */\n\nmodule.exports = process.env.NO_ASSERT\n  ? function(){}\n  : assert;\n\n/**\n * Assert the given `expr`.\n */\n\nfunction assert(expr) {\n  if (expr) return;\n\n  var stack = callsite();\n  var call = stack[1];\n  var file = call.getFileName();\n  var lineno = call.getLineNumber();\n  var src = fs.readFileSync(file, 'utf8');\n  var line = src.split('\\n')[lineno-1];\n  var src = line.match(/assert\\((.*)\\)/)[1];\n\n  var err = new AssertionError({\n    message: src,\n    stackStartFunction: stack[0].getFunction()\n  });\n\n  throw err;\n}\n"]}