'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _debug = require('debug');

var _debug2 = _interopRequireDefault(_debug);

var _utils = require('./utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var log = (0, _debug2.default)('socket.io-wxapp-client:socketGlobalEventHandle');
var isInitSocketGlobalEvent = false;

var defaultGloableEventHandler = function defaultGloableEventHandler() {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  log('没有socket全局处理事件 %O', args);
};

function mySocketGlobalEventHandle() {
  var handler = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultGloableEventHandler;

  // 绑定全局监听initListen
  my.onSocketOpen(function () {
    handler('open');
  });

  my.onSocketError(function (res) {
    handler('error', res);
  });

  my.onSocketClose(function () {
    handler('close');
  });

  my.onSocketMessage(function (res) {
    log('message', res);
    handler('message', res);
  });
}

// 全局事件接受者
var gloableEventHandler = void 0;
/**
 * 监听小程序socket全局的事件
 * @param  {Function} handler 事件接受者
 */
function weSocketGlobalEventHandle() {
  var handler = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultGloableEventHandler;

  // 设置全局事件接受者
  gloableEventHandler = handler;

  if (isInitSocketGlobalEvent) {
    return;
  }
  isInitSocketGlobalEvent = true;

  // 绑定全局监听initListen
  wx.onSocketOpen(function () {
    gloableEventHandler('open');
  });

  wx.onSocketError(function (res) {
    gloableEventHandler('error', res);
  });

  wx.onSocketClose(function () {
    gloableEventHandler('close');
  });

  wx.onSocketMessage(function (res) {
    log('message', res);
    gloableEventHandler('message', res);
  });
}

exports.default = (0, _utils.isMy)() ? mySocketGlobalEventHandle : weSocketGlobalEventHandle;